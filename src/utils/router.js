module.exports = function (robot) {
  var address, app, err, express, herokuUrl, multipart, pass, port, stat, user, HttpClient, bodyParser
  user = process.env.EXPRESS_USER
  pass = process.env.EXPRESS_PASSWORD
  stat = process.env.EXPRESS_STATIC
  port = process.env.EXPRESS_PORT || process.env.PORT || 8080
  address = process.env.EXPRESS_BIND_ADDRESS || process.env.BIND_ADDRESS || '0.0.0.0'
  HttpClient = require('scoped-http-client')
  robot.http = function (url, options) {
    return HttpClient.create(url, options).header('User-Agent', 'Discord.js/Peribot')
  }
  express = require('express')
  bodyParser = require('body-parser')
  multipart = require('connect-multiparty')
  app = express()
  app.use((function (_this) {
    return function (req, res, next) {
      res.setHeader('X-Powered-By', 'hubot/' + _this.name)
      return next()
    }
  })(robot))
  if (user && pass) {
    app.use(express.basicAuth(user, pass))
  }
  app.use(express.query())
  app.use(bodyParser.json())
  app.use(bodyParser.urlencoded())
  app.use(multipart({
    maxFilesSize: 100 * 1024 * 1024
  }))
  if (stat) {
    app.use(express['static'](stat))
  }
  try {
    robot.server = app.listen(port, address)
    robot.router = app
  } catch (_error) {
    err = _error
    robot.logger.error('Error trying to start HTTP server: ' + err + '\n' + err.stack)
    process.exit(1)
  }
  herokuUrl = process.env.HEROKU_URL
  if (herokuUrl) {
    if (!/\/$/.test(herokuUrl)) {
      herokuUrl += '/'
    }
    robot.pingIntervalId = setInterval((function (_this) {
      return function () {
        return HttpClient.create(herokuUrl + 'hubot/ping').post()(function (err, res, body) {
          if (err) {
            return console.error(err)
          }
          return _this.logger.info('keep alive ping!')
        })
      }
    })(robot), 5 * 60 * 1000)
    return robot.pingIntervalId
  }
}

// ---
// generated by coffee-script 1.9.2
